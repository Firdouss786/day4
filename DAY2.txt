Ansible
======================================
WHY Ansible?
==================
What is Ansible?
        Configuration mgmt tool.
        From Redhat
        Written in PYTHON
        Release
            Ansible - CMD - Open Source - FREEE - Powered by Community
            Ansible Towers == CMD + GUI - PAID
            https://www.devopsschool.com/videos/254/ansible-towertutorial-ansible-tower-tutorial-for-beginners-may-2018
        Agent less            

Why Ansible?
        EASY is LEARN | TEST | DEBUG | EXTEND | SHARE
                Compare to any LANG for Configuration mgmt.
        Ansible has a capabitlity to manage and deploy parrel.
        Ansible is Platform indepent
        Ideopotent -

    
What is Configuration mgmt????
    SERVER(S) Configuration mgmt

What is there in SERVER? of which you do manage config of it?????
RESOURCES
---------------
vmware
    HARDWARE
        Storage
        network
        cpu
        memory
SOFTWARE
    OS
    file
    directory
    ps
    shell
    policy
    services
    package
    yum
    apt
    nuget
    application aka package
PEOPLE
    user
    group
PROCESS aka POLICY
 
OTHER TOOLS
#1) CFEngine Configuration Tool.
#2) Puppet Configuration Tool.
#3) CHEF Configuration Tool.
#4) Ansible Configuration Tool.
#5) SALTSTACK Configuration Tool.
#6) JUJU Configuration Tool.
#7) RUDDER.

==========================================================
How it workS!!!!! Architecture of Ansible?
===========================================
ACS                                     ARS 
Ansible COntrol Server                  Ansible Remote Server
LINUX ONLY                              any
64 BIT                                  any
        -----------LINUX --------------> SSH - 22
        -----------WINSDOWS --------------> WINRM - HTTP - 5985 = HTTPS - 5986
PYTHON 2.7+   -----------LINUX -------------->     PYTHON 2.4+   
            ----------WINDOWS --------------> PS 3.0 + DOTNET
---------------------------------------------------------------------
Components of ACS - ANSIBLE
------------------------------
Ansible
    MODULES
    What is Module? - ONE TASK
            CORE  - GIVEN BY ANSIBLE --- 2000
            https://docs.ansible.com/ansible/latest/modules/modules_by_category.html
            COMMUNITY 
                    Paramterss...
Inventory
    LIST OF IP ADDRESS
            CAN BE PASSED
                    COMMADN LINE
                    FILE - INI FORMAT
                    DIRECTORY
                    SCRIPT

Config file
   /etc/ansible/ansible.cfg

Playbook 






Roles in Ansible?
==============================
Programmer
Admin/Ops

How to become JAVA Programmer?
======================================
JDK -> .JAVA        --> .CLASS --> .JAR ---> .WAR
        Variables
        Operators
        Conditioning
        Loops
        Functions
        Class
        Interace
    

How to become Ansible Programmer?
======================================
Ansible -> .yaml(PLAYBOOK)        -->  role -->
        Variables
        Operators
        Conditioning
        Loops
        Functions


=========================================================
https://www.devopsschool.com/blog/how-to-install-ansible-in-centos-7-rhel-7/

$ sudo yum install wget -y
$ wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
$ yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
$ sudo rpm -i epel-release-latest-7.noarch.rpm
$ sudo yum update -y 
$ sudo yum install ansible -y
$ systemctl stop firewalld
$ systemctl disable firewalld
  49  ansible --version
   50  ansible -h
   51  history


1 104.211.190.185
2 104.211.190.192
3 104.211.190.217
4 104.211.191.253
5 104.211.184.54
6 104.211.188.200
7 104.211.189.15
8 104.211.189.38
9 104.211.189.58
10 104.211.189.236
11 104.211.186.233
12 104.211.191.18
13 104.211.191.23
14 104.211.185.89
15 104.211.185.173
16 104.211.185.179
17 104.211.184.68
18 104.211.184.70
19 104.211.184.72
20 104.211.184.119

landt
landt$123d3kLjsg

MINE
==============
104.211.181.240

	using ADHOC command 
		Do one task in ONE MACHINE(localhost)   DONE
		Do one task in ONE REMOTE MACHINE       DONE        
		Do one task in MULTIPLE REMOTE MACHINES using Inventory DONE 
		Do one task in MULTIPLE REMOTE MACHINES using group in Inventory        DONE 
	using Playbook(Program)
		Do Multiple tasks(Playbook) in ONE MACHINE(localhost)
		Do Multiple tasks(Playbook) in ONE REMOTE MACHINE
		Do Multiple tasks(Playbook) in MULTIPLE REMOTE MACHINE using Inventory
		Do Multiple tasks(Playbook) in MULTIPLE REMOTE MACHINE using group in Inventory
		Do Multiple tasks(Playbook) in MULTIPLE REMOTE MACHINE using group of group in Inventory
	using Role(Program)
		Do One Role in in ONE MACHINE(localhost)

=========================================================
ADHOC using Ansible.

What your requirement?
=================================
Setup a webserver.

Step 1 - Install HTTPD "Ansible module for" Module - yum
Step 2 - Copy a index.html in /var/www/html/ - copy
Step 3 - Start a web server - service


ansible -h

Optional arguments
Connection Options:
Privilege Escalation Options

ansible localhost -m yum -a"pkg=httpd state=present"
ansible localhost -m file -a"path=index.html state=touch"
ansible localhost -m copy -a"dest=/var/www/html/ src=index.html"
ansible localhost -m service -a"name=httpd state=started"

Lab- 
https://www.devopsschool.com/blog/ansible-adhoc-commands-lab-excercise-part-1/
================================================

localhost
--------------------
ansible localhost -m yum -a"pkg=httpd state=present"
ansible localhost -m file -a"path=index.html state=touch"
ansible localhost -m copy -a"dest=/var/www/html/ src=index.html"
ansible localhost -m service -a"name=httpd state=started"

Remote host
--------------------
ansible all -i 104.211.185.173, -m yum -a"pkg=httpd state=present" -u landt -k -b -K 
ansible all -i 104.211.185.173, -m yum -a"pkg=httpd state=present" -u landt -k -b -K
ansible all -i 104.211.185.173, -m file -a"path=/opt/devopsschool.txt state=touch" -u landt -k -b -K

Inevntory GROUP
---     
ALL 
UNGROUP


landt
landt$123d3kLjsg
s
ansible all -i 104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173,104.211.185.173, -m yum -a"pkg=httpd state=present" -u landt -k -b -K

INVENTORY FILE
====================
INI FORMAT
HAS IP ADDRESS or HoST sep by new line.
Name can be anything.

104.211.189.236
104.211.186.233
104.211.191.18
104.211.191.23
104.211.185.89
104.211.185.173

## NEEED TO WORK ---- ansible localhost -m known_hosts -a"name=known_hosts key="
ansible all -i inventory -m file -a"path=/opt/devopsschool.txt state=touch" -u landt -k -b -K

export ANSIBLE_HOST_KEY_CHECKING=False


INVENTORY FILE GROUP
====================
INI FORMAT
HAS IP ADDRESS or HoST sep by new line.
Name can be anything.
Has a Group

[web]
104.211.189.236
104.211.186.233

[db]
104.211.191.18
104.211.191.23
104.211.185.89
104.211.185.173

ansible web -i inventory -m file -a"path=/opt/devopsschool.txt state=touch" -u landt -k -b -K
--------------------------------------


INVENTORY FILE BEHAVIOURAL PARAM
====================
INI FORMAT
HAS IP ADDRESS or HoST sep by new line.
Name can be anything.
Has a Group

[web]
104.211.189.236 ansible_user=landt ansible_password=rajesh$123 ansible_become=yes ansible_become_password=rajesh$123
104.211.186.233 ansible_user=landt ansible_password=landt$123d3kLjsg ansible_become=yes ansible_become_password=landt$123d3kLjsg

[db]
104.211.191.18
104.211.191.23
104.211.185.89
104.211.185.173

[db:vars]
ansible_user=landt 
ansible_password=landt$123d3kLjsg 
ansible_become=yes 
ansible_become_password=landt$123d3kLjsg


landt
landt$123d3kLjsg

ansible web,db -i inventory -m file -a"path=/opt/devopsschool.txt state=touch" 
ansible web,db -i inventory -m file -a"path=/opt/devopsschool.txt state=touch"
ansible web,db -i inventory -m file -a"path=/opt/devopsschool.txt state=touch"
ansible web,db -i inventory -m file -a"path=/opt/devopsschool.txt state=touch"
ansible web,db -i inventory -m file -a"path=/opt/devopsschool.txt state=touch"
ansible web,db -i inventory -m file -a"path=/opt/devopsschool.txt state=touch"
ansible web,db -i inventory -m file -a"path=/opt/devopsschool.txt state=touch"
ansible web,db -i inventory -m file -a"path=/opt/devopsschool.txt state=touch"
ansible web,db -i inventory -m file -a"path=/opt/devopsschool.txt state=touch"
ansible web,db -i inventory -m file -a"path=/opt/devopsschool.txt state=touch"
ansible web,db -i inventory -m file -a"path=/opt/devopsschool.txt state=touch"
ansible web,db -i inventory -m file -a"path=/opt/devopsschool.txt state=touch"
ansible web,db -i inventory -m file -a"path=/opt/devopsschool.txt state=touch"
ansible web,db -i inventory -m file -a"path=/opt/devopsschool.txt state=touch"


Solution - 
Playbook

What is Playbook
------------------------------
.yaml file
has multiple Play
Each Play       
        HOSTS - GROUP NAME
        TASKS
                task 1 -Module name - its Param
                task 2 -Module name - its Param
                task 3 -Module name - its Param
                task 4 -Module name - its Param



---
- name: This sets up an httpd webserver
  hosts: web
  tasks:
  - name: Install the httpd apps
    yum: name=httpd
  - name: start the httpd service
    service: name=httpd state=started
  - name: create a empty fle
    file: dest=/opt/test.txt state=touch
  - name: copy a file
    copy: dest=/var/www/html/ src="index.html"
...

ansible-playbook -i inventory web.yaml

===============================================
Variables
https://www.devopsschool.com/tutorial/ansible/variables/index.html


Conditioning
https://www.devopsschool.com/tutorial/ansible/ansible-conditional-programming-playbooks.html

Lopping
https://www.devopsschool.com/tutorial/ansible/ansible-looping-programming-playbooks.html


---
- name: This sets up an httpd webserver
  hosts: web
  vars:
    myname: "rajesh kumar"
    package: "httpd"
    service: "httpd"

  tasks:
  - name: Install the httpd apps
    yum: name={{ package }}
  - name: start the httpd service
    service: name={{ service }} state=started
  - name: create a empty fle
    file: dest=/opt/test.txt state=touch
  - name: copy a file
    copy: dest=/var/www/html/ src="index.html"
  - name: Ansible debug example.
    debug:
      msg: "{{ myname }}"
...

ansible-playbook -i inventory web.yaml


---
- name: This sets up an httpd webserver
  hosts: web
  vars:
    myname: "rajesh kumar"
    package: "httpd"
    service: "httpd"

  tasks:
  - name: Install the httpd apps
    yum: name={{ package }}
  - name: start the httpd service
    service: name={{ service }} state=started
  - name: create a empty fle
    file: dest=/opt/test.txt state=touch
  - name: copy a file
    copy: dest=/var/www/html/ src="index.html"
  - name: Ansible debug example.
    debug:
      msg: "{{ myname }}"
    when: ansible_os_family == "Debian"
...


---
- name: This sets up an httpd webserver
  hosts: web
  vars:
    myname: "rajesh kumar"
    package: "httpd"
    service: "httpd"

  tasks:
  - name: Install the httpd apps
    yum: name={{ item }}
    with_items:
      - git
      - "{{ package }}"
  - name: start the httpd service
    service: name={{ service }} state=started
  - name: create a empty fle
    file: dest=/opt/test.txt state=touch
  - name: copy a file
    copy: dest=/var/www/html/ src="index.html"
  - name: Ansible debug example.
    debug:
      msg: "{{ myname }}"
    when: ansible_os_family == "Debian"
...

===================================



---
- name: This sets up an httpd webserver
  hosts: web

  roles:
  - web
...

===================================
ansible-galaxy init web
ansible-playbook -i inventory site.yaml
